{
	// Place your global snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are:
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders.
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	// Exports
	"My Export Interface": {
		"scope": "typescript,typescriptreact",
		"prefix": "ei",
		"body": "export interface ${1:name} {$2}"
	},
	"My Export Type": {
		"scope": "typescript,typescriptreact",
		"prefix": "et",
		"body": "export type ${1:name} = $0;"
	},
	// Class memebers
	"My Private Method": {
		"scope": "typescript,typescriptreact",
		"prefix": "private method",
		"body": ["private ${1:method}($2) {", "\t$0", "}"]
	},
	"My Protected Method": {
		"scope": "typescript,typescriptreact",
		"prefix": "protected method",
		"body": ["protected ${1:method}($2) {", "\t$0", "}"]
	},
	"My Class Fields": {
		"scope": "typescript,typescriptreact",
		"prefix": "field",
		"body": ["private readonly ${1:field} = ($2) => {", "\t$0", "}"]
	}
}
